1584878450923:(js/alert "Am I connected?")
1584878583058:(in-ns 'om-tut.core)
1584878599941:(swap! app-state assoc :text "Do it live!")
1584878929916:(in-ns 'om-tut.core)
1584878955236:(swap! app-state assoc :text "Do it live!")
1584878978517:(swap! app-state assoc :text "Do it live agai!")
1584879758135:(swap! app-state assoc :text "Multiple roots!")
1584879789108:(reset! app-stage {:text "some other thing!"})
1584879816856:(doc reset!)
1584879875266:(refer '[clojure.core])
1584880264709:(refer '[clojure.repl\n         ])
1584880271764:(refer '[clojure.repl])
1584880281864:(clojure.core/refer '[clojure.repl])
1584880297204:(clojure.core/refer 'clojure.repl)
1584880454000:(require 'clojure.repl)
1584880457780:(doc\n )
1584880466335:(doc assoc)
1584880479419:(doc reset!)
1584880492299:(in-ns 'om-tut.core)
1584880506142:(swap! app-state assoc :text "Do it live agai!")
1584880530486:(reset! app-state {:text "The final text value"})
1584883978311:(doc apply)
1584883996269:(require 'clojure.repl)
1584883999827:(doc apply)
1584884012407:(require 'clojure.repl)
1584884017170:(doc reset!)
1584884027118:(require 'clojure.repl)
1584884030150:(doc reset!)
1584888682127:(doc clojure.string/count)
1584888943105:(parse-contact "Gerald J. Sussman")
1584888957334:(parse-contact "Gerald J Sussman")
1584888963760:(parse-contact "Gerald . Sussman")
1584888980703:(string/replace "." "." .)
1584888983994:(string/replace "." "." "")
1584888998874:(count "")
1584889049412:(cond-> {:one "one"}\n  (== 2 3) (assoc :three "three"))
